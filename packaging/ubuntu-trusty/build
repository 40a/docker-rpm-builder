#!/bin/bash -ex
# enter the directory where the build script is located
cd "${0%/*}"

# some useful variables
SRC_DIR="$(pwd)/../../"
CURRENT_DISTRO=$(basename $(pwd))
BUILD_IMAGE="docker-rpm-builder-${CURRENT_DISTRO}-build"

docker build --pull -t ${BUILD_IMAGE} build-image

rm -rf out

docker run --env "BUILD_NUMBER=${BUILD_NUMBER:-0}" --env "GIT_COMMIT=${GIT_COMMIT:-asd}" --env-file ../env.list --rm -v $(pwd)/build-inside:/build-inside:ro -v ${SRC_DIR}:/source:ro -v $(pwd)/out:/out -w /build-inside ${BUILD_IMAGE} /build-inside/build-package

trap 'vagrant destroy --force' EXIT
vagrant up
#vagrant ssh -c 'nohup sudo -b /home/vagrant/sync/test-inside/test > /tmp/test.log 2>&1'
vagrant ssh -c 'sudo /home/vagrant/sync/test-inside/test'

#while vagrant ssh -c "test ! -r /tmp/test.exit"; 
#do
#    sleep 1
#done
#
#vagrant ssh -c "cat /tmp/test.log"
#
#TEST_EXIT=$(vagrant ssh -c "cat /tmp/test.exit" | tr -d '[:space:]')
#if [ "${TEST_EXIT}" -ne 0 ];
#then
#    exit ${TEST_EXIT}
#fi

echo "${CURRENT_DISTRO} Test phase succeeded."

